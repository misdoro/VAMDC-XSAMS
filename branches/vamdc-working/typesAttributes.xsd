<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" attributeFormDefault="unqualified"
	xmlns="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/vamdc-working"
	xmlns:xsams="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/vamdc-working"
	targetNamespace="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/vamdc-working">
	
	<xs:annotation>
		<xs:documentation>Contains general data types and attributes used in several subschemas</xs:documentation>
	</xs:annotation>
	<!--=== general attributes and types ===-->
	<xs:complexType name="PrimaryType">
		<xs:sequence>
			<xs:element name="Comments" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Arbitrary comments</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SourceRef" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>One or more source references - these entries should match the sourceID attributes of the Sources</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:IDREF">
						<xs:pattern value="B.+"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="methodRef" type="MethodRefType"/>
	</xs:complexType>
	
	<xs:complexType name="ChemicalElementType">
		<xs:annotation>
			<xs:documentation>Description of a chemical element</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="NuclearCharge" type="xs:positiveInteger">
				<xs:annotation>
					<xs:documentation>Nuclear charge in units of electron charge</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ElementSymbol" type="ElementSymbolType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Standard symbol of a chemical element (e.g., H or Ta)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<!--===  types related to numerical data ===-->
	
	<xs:complexType name="DataType">
		<xs:annotation>
			<xs:documentation>Description of physical data - a Value/Accuracy pair</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="Value" type="ValueType">
						<xs:annotation>
							<xs:documentation>Value of a particular quantity</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Accuracy" type="AccuracyType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Description of the accuracy</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="NamedDataType">
		<xs:annotation>
			<xs:documentation>Named description of physical data. Used, for example, in function's parameters.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DataType">
				<xs:attribute name="name" type="xs:string" use="required">
				<xs:annotation>
					<xs:documentation>Name of the function parameter, example:a</xs:documentation>
				</xs:annotation>
		</xs:attribute>
			</xs:extension>
		</xs:complexContent>	
	</xs:complexType>
	
	<xs:complexType name="DataFuncType">
		<xs:annotation>
			<xs:documentation>Description of physical data - either a Value/Accuracy pair or a FitParametersType</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:choice>
					<xs:sequence>
						<xs:element name="Value" type="ValueType">
							<xs:annotation>
								<xs:documentation>Value of a particular quantity</xs:documentation>
							</xs:annotation>
						</xs:element>
						<xs:element name="Accuracy" type="AccuracyType" minOccurs="0">
							<xs:annotation>
								<xs:documentation>Description of the accuracy</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
					<xs:element name="FitParameters" type="FitParametersType" minOccurs="1" maxOccurs="unbounded"/>
				</xs:choice>
				<xs:attribute name="name" type="xs:string" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="AccuracyType">
		<xs:annotation>
			<xs:documentation>Accuracy of numerical data</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Systematic" type="AccuracyErrorType" minOccurs="0"/>
			<xs:choice minOccurs="0">
				<xs:element name="Statistical" type="AccuracyErrorType"/>
				<xs:sequence>
					<xs:element name="StatHigh" type="AccuracyErrorType"/>
					<xs:element name="StatLow" type="AccuracyErrorType"/>
				</xs:sequence>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="calibration" type="AccuracyCalibrationType"/>
		<xs:attribute name="quality" type="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>0 means quality is guaranteed, 
					any other value means data might be bad for some reason</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	
	<xs:complexType name="AccuracyErrorType">
		<xs:annotation>
			<xs:documentation>Statistical error</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="confidence">
					<xs:simpleType>
						<xs:restriction base="xs:double">
							<xs:minInclusive value="0"/>
							<xs:maxInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="relative" type="xs:boolean" default="false"/> 
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:simpleType name="AccuracyCalibrationType">
		<xs:annotation>
			<xs:documentation>Describes the reference point for measured data</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="absolute"/>
			<xs:enumeration value="relative"/>
			<xs:enumeration value="normalized"/>
			<xs:enumeration value="uncalibrated"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="FitParametersType">
		<xs:annotation>
			<xs:documentation>A list of fit parameters and arguments. The function referred to takes arguments
							  (independent variables at which the function is calculated; a range of acceptable
							  values can be specified) and parameters (the 'constants' for a particular function
							  which define the fit to that particular model)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FitArgument" type="ArgumentType"  minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="FitParameter" type="NamedDataType"  minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="functionRef" type="FunctionRefType" use="optional"/>
	</xs:complexType>
	
	<xs:complexType name="ArgumentType">
		<xs:sequence>
			<xs:element name="Description" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Verbose description of argument</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LowerLimit" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lower limit of argument value. Units are derived from ArgumentType</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpperLimit" type="xs:double" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Upper limit of argument value. Units are derived from ArgumentType</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="required">
			<xs:annotation>
				<xs:documentation>Name of the argument, matching that defined in the function definition. Example: a</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="units" type="UnitsType" use="required"/>
	</xs:complexType>
	
	<xs:complexType name="DataSetType">
		<xs:annotation>
			<xs:documentation>Gives the actual data either (or both) with numerical tabulated data or (and) fitted data </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="FitData" type="FitDataType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Fits of data</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="TabulatedData" type="TabulatedDataType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>Tables of data</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="dataDescription" type="DataDescriptionType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="DataSetsType">
		<xs:sequence>
			<xs:element name="DataSet" type="DataSetType" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>List of datasets of different nature (cross sections, rate coefficients, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="DataDescriptionType">
		<xs:annotation>
			<xs:documentation>Descriptor for the type of collisonal parameter</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:enumeration value="crossSection"/>
			<xs:enumeration value="collisionStrength"/>
			<xs:enumeration value="rateCoefficient"/>
			<xs:enumeration value="probability"/>
			<xs:enumeration value="effectiveCollisionStrength"/>
			<xs:enumeration value="sputteringYield"/>
			<xs:enumeration value="sputteredEnergyCoefficient"/>
			<xs:enumeration value="particleReflectionCoefficient"/>
			<xs:enumeration value="energyReflectionCoefficient"/>
			<xs:enumeration value="meanPenetrationDepth"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DataTableType">
		<xs:annotation>
			<xs:documentation>Similar to DataType but for tabular type of data</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="DataList" type="DataListType">
				<xs:annotation>
					<xs:documentation>List of data values. Example: 3 15 33.3 1e3</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Error" type="DataListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Error for each data point of the list</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NegativeError" type="DataListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Negative error for each data point of</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PositiveError" type="DataListType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Positive error for each data point of the list</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DataDescription" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional description of the data list</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
		<xs:attribute name="units" type="UnitsType" use="required"/>
		<xs:attribute name="parameter" type="xs:string"/>
	</xs:complexType>
	<xs:complexType name="DataXYType">
		<xs:annotation>
			<xs:documentation>Gives the structure of X Y data tables (several X are allowed)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="X" type="DataTableType" maxOccurs="unbounded"/>
			<xs:element name="Y" type="DataTableType">
				<xs:annotation>
					<xs:documentation>Data value</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TabulatedDataType">
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="DataXY" type="DataXYType"/>
					<xs:element name="ReferenceFrame" type="ReferenceFrameType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Reference frame in which is given the energy, velocity...</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PhysicalUncertainty" type="xs:string" minOccurs="0"/>
					<xs:element name="ProductionDate" type="xs:date" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="FitDataType">
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="FitParameters" type="FitParametersType">
						<xs:annotation>
							<xs:documentation>Fitting parameters</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="FitAccuracy" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Description of fit accuracy</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PhysicalUncertainty" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Description of physical uncertainty</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ProductionDate" type="xs:date" minOccurs="0">
						<xs:annotation>
							<xs:documentation>Fit production date</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- Needed for FitDataType, but not implemented anywhere yet(?) -->
	<xs:complexType name="FitValidityLimitsType">
		<xs:sequence>
			<xs:element name="LowerLimit" type="ValueType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lower limit of fit validity</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UpperLimit" type="ValueType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Upper limit of fit validity</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ExpressionType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="computerLanguage" type="xs:string" use="required">
					<xs:annotation>
						<xs:documentation>Programming language for the function expression. Example: Fortran2003.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:simpleType name="ReferenceFrameType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="CenterOfMass"/>
			<xs:enumeration value="LaboratoryFrame"/>
			<xs:enumeration value="TargetFrame"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:complexType name="ValueType">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="units" type="UnitsType" use="required"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:simpleType name="UnitsType">
		<xs:annotation>
			<xs:documentation>Description of physical units. Use "unitless" for dimensionless quantities.</xs:documentation>
		</xs:annotation>
			<xs:restriction base="xs:token">
				<xs:enumeration value="undef"/>
				<xs:enumeration value="eV/amu"/>
				<xs:enumeration value="keV/amu"/>
				<xs:enumeration value="MeV/amu"/>
				<xs:enumeration value="eV"/>
				<xs:enumeration value="keV"/>
				<xs:enumeration value="MeV"/>
				<xs:enumeration value="au"/>
				<xs:enumeration value="1/cm"/>
				<xs:enumeration value="J"/>
				<xs:enumeration value="Ry"/>
				<xs:enumeration value="unitless"/>
				<xs:enumeration value="kJ/mol"/>
				<xs:enumeration value="kcal/mol"/>
				<xs:enumeration value="K"/>
				<xs:enumeration value="Hz"/>
				<xs:enumeration value="kHz"/>
				<xs:enumeration value="MHz"/>
				<xs:enumeration value="m"/>
				<xs:enumeration value="cm"/>
				<xs:enumeration value="A"/>
				<xs:enumeration value="nm"/>
				<xs:enumeration value="deg"/>
				<xs:enumeration value="rad"/>
				<xs:enumeration value="srad"/>
				<xs:enumeration value="s"/>
				<xs:enumeration value="m3/s"/>
				<xs:enumeration value="cm3/s"/>
				<xs:enumeration value="cm6/s"/>
				<xs:enumeration value="m2"/>
				<xs:enumeration value="cm2"/>
				<xs:enumeration value="b"/>
				<xs:enumeration value="Mb"/>
				<xs:enumeration value="1/s"/>
				<xs:enumeration value="C.m"/>
				<xs:enumeration value="J/T"/>
				<xs:enumeration value="C.m2"/>
				<xs:enumeration value="m/s"/>
				<xs:enumeration value="cm/s"/>
				<xs:enumeration value="C"/>
				<xs:enumeration value="electron"/>
				<xs:enumeration value="g"/>
				<xs:enumeration value="amu"/>
				<xs:enumeration value="kg"/>
				<xs:enumeration value="1/m2/s"/>
				<xs:enumeration value="1/cm2/s"/>
				<xs:enumeration value="J/m2/s"/>
				<xs:enumeration value="J/cm2/s"/>
				<xs:enumeration value="1/m2"/>
				<xs:enumeration value="1/cm2"/>
				<xs:enumeration value="1/m3"/>
				<xs:enumeration value="1/cm3"/>
				<xs:enumeration value="J/m2"/>
				<xs:enumeration value="J/cm2"/>
				<xs:enumeration value="W/m2"/>
				<xs:enumeration value="W/cm2"/>
				<xs:enumeration value="W"/>
				<xs:enumeration value="atm"/>
				<xs:enumeration value="km/mol"/>
				<xs:enumeration value="1/cm2/atm"/>
				<xs:enumeration value="1/cm/atm"/>
			</xs:restriction>
	</xs:simpleType>
	
	<!--=== types and attributes common to states ===-->

	<xs:complexType name="jjCouplingType">
		<xs:sequence>
			<xs:element name="j" type="AngularMomentumType" minOccurs="2" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Value of the total angular momentum</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="jKCouplingType">
		<xs:all>
			<xs:element name="j" type="AngularMomentumType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Value of the total angular momentum of the core</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="S2" type="AngularMomentumType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Spin of the external electron(s)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="K" type="AngularMomentumType">
				<xs:annotation>
					<xs:documentation>Value of the K-number (j + orbital angular momentum of the external electron(s))</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="LKCouplingType">
		<xs:all>
			<xs:element name="L" type="OrbitalAngularMomentumType">
				<xs:annotation>
					<xs:documentation>Value of the sum of orbital angular momenta of the core and external electron </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="K" type="AngularMomentumType">
				<xs:annotation>
					<xs:documentation>Value of the K-number (L + spin of the core)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="S2" type="AngularMomentumType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Spin of the external electron(s)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="LSCouplingType">
		<xs:all>
			<xs:element name="L" type="OrbitalAngularMomentumType">
				<xs:annotation>
					<xs:documentation>Orbital angular momentum of the term in LS-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="S" type="AngularMomentumType">
				<xs:annotation>
					<xs:documentation>Spin angular momentum of the term in LS-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Multiplicity" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>2S+1</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Seniority" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Seniority number</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="MixingCoefficientType">
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="mixingClass" type="MixingClassType" use="required">
					<xs:annotation>
						<xs:documentation>Indicator of whether amplitude or amplitude squared is given</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="OrbitalAngularMomentumType">
		<xs:annotation>
			<xs:documentation>non-negative integer (and a symbol)</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="Value" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Value of the orbital angular momentum</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Symbol" type="OrbitalAngularMomentumSymbolType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Symbol of the orbital angular momentum</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="TermType">
		<xs:annotation>
			<xs:documentation>Complex term for atomic term in different couplings (e.g., LS or jj).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LS" type="LSCouplingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Term in LS-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jj" type="jjCouplingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Term in jj-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="J1J2" type="jjCouplingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Term in J1J2-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="jK" type="jKCouplingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Term in jK-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LK" type="LKCouplingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Term in LK-coupling</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TermLabel" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Arbitrary term label</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="LifeTimeType">
		<xs:annotation>
			<xs:documentation>Lifetime, with state decay mechanism: total, radiative, non-radiative</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="DataType">
				<xs:attribute name="decay" use="required">
					<xs:simpleType>
						<xs:restriction base="xs:token">
							<xs:enumeration value="total"/>
							<xs:enumeration value="totalRadiative"/>
							<xs:enumeration value="totalNonRadiative"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:simpleType name="AngularMomentumProjectionType">
		<xs:restriction base="xs:decimal">
			<xs:pattern value="(\+|-)?\d+(\.(0|5)?)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AngularMomentumType">
		<xs:annotation>
			<xs:documentation>non-negative integer or half-integer number (e.g., 2.5).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:decimal">
			<xs:pattern value="\d+(\.(0|5)?)?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="ElementSymbolType">
		<xs:annotation>
			<xs:documentation>Symbol for a chemical element</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token">
			<xs:pattern value="\p{Lu}\p{Ll}?"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="PrincipalQuantumNumberType">
		<xs:annotation>
			<xs:documentation>Principal quantum number (positive integer)</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:positiveInteger"/>
	</xs:simpleType>
	<xs:simpleType name="ParityType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="even"/>
			<xs:enumeration value="odd"/>
			<xs:enumeration value="undefined"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="MixingClassType">
		<xs:restriction base="xs:token">
			<xs:enumeration value="squared"/>
			<xs:enumeration value="signed"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="OrbitalAngularMomentumSymbolType">
		<xs:restriction base="xs:string">
			<xs:length value="1"/>
			<xs:pattern value="\w"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!--=== types common to collisions, radiative and autoionisation ===-->
	<xs:complexType name="SpeciesStateRefType">
		<xs:annotation>
			<xs:documentation>Choice of either species or specific state or both</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:sequence>
				<xs:element name="SpeciesRef" type="SpeciesRefType"/>
				<xs:element name="StateRef" type="StateRefType" minOccurs="0"/>
			</xs:sequence>
			<xs:element name="StateRef" type="StateRefType"/>
		</xs:choice>
	</xs:complexType>
	
	<!-- VectorsType container for one or more Vector elements-->
	<xs:complexType name="VectorsType">
		<xs:annotation>
			<xs:documentation>A container for a collection of Vectors</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="Vector" type="VectorType" minOccurs="1" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="units" type="UnitsType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="VectorType">
		<xs:complexContent>
			<xs:annotation>
				<xs:documentation>A vector in 3-D space defined by its x,y,z components, and a reference string giving context</xs:documentation>
			</xs:annotation>
			<xs:extension base="PrimaryType">
				<xs:attribute name="ref" type="xs:string"/>
				<xs:attribute name="x3" type="xs:double"/>
				<xs:attribute name="y3" type="xs:double"/>
				<xs:attribute name="z3" type="xs:double"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- A matrix -->
	<xs:complexType name="MatrixType">
		<xs:annotation>
			<xs:documentation>A nrows x ncols matrix. RowRefs is a whitespace separated list of row names, ColRefs is the same for
							  columns. The attribute 'form' identifies the type of matrix ('symmetric', 'diagonal', etc.), and the
							  attribute 'values' is 'real', 'imaginary', or 'complex'. The matrix itself is a whitespace separated
							  list of values. For an arbitrary matrix, it has nrows*ncols entries. For a diagonal matrix there are
							  nrows=ncols entries. For a symmetric matrix there are nrows(nrows+1)/2 entries etc.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="RowRefs" type="StringListType"/>
					<xs:element name="ColRefs" type="StringListType"/>
					<xs:element name="Matrix" type="xs:string" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
				<xs:attribute name="units" type="UnitsType" use="required"/>
				<xs:attribute name="nrows" type="xs:integer" use="required"/>
				<xs:attribute name="ncols" type="xs:integer" use="required"/>
				<xs:attribute name="form" type="xs:string" use="required"/>
				<xs:attribute name="values" type="StringListType" use="required"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	

	<xs:simpleType name="DoubleListType">
		<xs:annotation>
			<xs:documentation>List of double, base for other types</xs:documentation>
		</xs:annotation>
		<xs:list itemType="xs:double"/>
	</xs:simpleType>
	
	<xs:simpleType name="StringListType">
		<xs:annotation>
			<xs:documentation>List of strings, base for other types</xs:documentation>
		</xs:annotation>
		<xs:list itemType="xs:string"/>
	</xs:simpleType>
	
	<!-- It doesn't need sources and comments, because it always appears inside
		another element which provides these -->
	<xs:complexType name="DataListType">
		<xs:annotation>
			<xs:documentation>Whitespace-delimited list of numbers, with optional units and items count</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="DoubleListType">
				<xs:attribute name="n" type="xs:positiveInteger">
					<xs:annotation>
						<xs:documentation>List elements count</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="units" type="UnitsType"/>
			</xs:extension>
		</xs:simpleContent>    
	</xs:complexType>
	
	<xs:complexType name="LinearSequenceType">
		<xs:annotation>
			<xs:documentation>describes arithmetic progressions of the form 
				a0 a0+a1 a0+2a1 a0+3a1 ... a0+(n-1)a1</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:attribute name="n" type="xs:positiveInteger"/>
				<xs:attribute name="units" type="UnitsType"/>
				<xs:attribute name="a0" type="xs:double" use="required">
					<xs:annotation>
						<xs:documentation>initial value</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="a1" type="xs:double" use="required">
					<xs:annotation>
						<xs:documentation>increment</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>      
	</xs:complexType>
	
	<!-- A data series type -->
	<xs:complexType name="DataSeriesType">
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:choice>
						<xs:element name="DataList" type="DataListType"/>
						<xs:element name="LinearSequence" type="LinearSequenceType"/>
						<xs:element name="DataFile" type="xs:string"/>
					</xs:choice>
					<xs:choice minOccurs="0">
						<xs:element name="ErrorList" type="DataListType"/>
						<xs:element name="Error" type="xs:double"/>
					</xs:choice>
				</xs:sequence>
				<xs:attribute name="parameter" type="xs:string"/>
				<xs:attribute name="units" type="UnitsType"/>
				<xs:attribute name="id" type="xs:ID"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- A data table: one or more X-columns (abcissa(e); independent variable(s)) and one or more
		Y-columns (dependent variable(s)) -->
	<xs:complexType name="SimpleDataTableType">
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="Description" type="xs:string"/>
					<xs:element name="X" type="DataSeriesType"/>
					<xs:element name="Y" type="DataSeriesType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	<!-- The partition function as a function of temperature: Q(T), expressed as a pair of
		 DataSeries columns -->
	<xs:complexType name="PartitionFunctionType">
		<xs:complexContent>
			<xs:extension base="PrimaryType">
				<xs:sequence>
					<xs:element name="T" type="DataSeriesType" minOccurs="1" maxOccurs="1"/>
					<xs:element name="Q" type="DataSeriesType" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
				<xs:attribute name="nuclearSpinIsomer" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	
	
	<!-- ID types definitions-->
	<xs:simpleType name="EnvironmentIDType">
		<xs:annotation>
			<xs:documentation>ID for environments.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="E.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="FunctionIDType">
		<xs:annotation>
			<xs:documentation>ID for a specific function</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="F.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="MethodIDType">
		<xs:annotation>
			<xs:documentation>ID for a specific method</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="M.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SourceIDType">
		<xs:annotation>
			<xs:documentation>Reference to specific bibliographic items.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="B.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SpeciesIDType">
		<xs:annotation>
			<xs:documentation>ID for a species. 
					Is used to speed-up location of species information from processes.
					May be used instead of stateID if exact state is not known or irrelevant.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="X.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="StateIDType">
		<xs:annotation>
			<xs:documentation>ID for a specific atomic/molecular state, particle or solid.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="S.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="NormalModeIDType">
		<xs:annotation>
			<xs:documentation>ID for a normal vibrational mode of complex molecule.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:ID">
			<xs:pattern value="V.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<!-- References types definition. All IDREF's should be here.-->
	<xs:simpleType name="MethodRefType">
		<xs:annotation>
			<xs:documentation>Reference to a specific method.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="M.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="FunctionRefType">
		<xs:annotation>
			<xs:documentation>Reference to a specific function</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="F.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="SpeciesRefType">
		<xs:annotation>
			<xs:documentation>Reference to a species. 
				References atomic ion or molecule.
				Particles and solids are always referred by stateID
				</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="X.+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="EnvironmentRefType">
		<xs:annotation>
			<xs:documentation>Reference to environment.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="E.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="StateRefType">
		<xs:annotation>
			<xs:documentation>Reference to state: atomic, molecular, particle or solid one.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="S.+"/>
		</xs:restriction>
	</xs:simpleType>
	
		<xs:simpleType name="NormalModeRefType">
		<xs:annotation>
			<xs:documentation>Reference to a normal vibrational mode of complex molecule.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:IDREF">
			<xs:pattern value="V.+"/>
		</xs:restriction>
	</xs:simpleType>
	
	
</xs:schema>
