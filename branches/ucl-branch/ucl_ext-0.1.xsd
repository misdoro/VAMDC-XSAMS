<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/ucl-branch"
    xmlns:ucl="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/ucl-branch"
    targetNamespace="http://xsams.svn.sourceforge.net/viewvc/xsams/branches/ucl-branch"
    elementFormDefault="qualified"
    attributeFormDefault="unqualified">
    
    <!-- Include the basic types -->
    <xs:include schemaLocation="ucl-BasicTypes.xsd"/>

    <xs:element name="Intensity" type="ParameterType"/>
    <xs:element name="EquilibriumReferenceConditions" type="EquilibriumReferenceConditionsType"/>
    <xs:element name="Broadening" type="BroadeningType"/>
    <xs:element name="Shifting" type="ShiftingType"/>
    <xs:element name="CrossSection" type="CrossSectionType"/>
    
    <xs:complexType name="BroadeningType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="Lorentzian" type="LorentzianType" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="Gaussian" type="LorentzianType" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="Voigt" type="VoigtType" minOccurs="0" maxOccurs="1"/>
                    <xs:element name="Lineshape" type="LineshapeType" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="envRef" type="xs:IDREF"/>
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LorentzianType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="gammaL" type="DataType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="GaussianType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="alphaD" type="DataType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="VoigtType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="gammaL" type="DataType" minOccurs="1" maxOccurs="1"/>
                    <xs:element name="alphaD" type="DataType" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="LineshapeType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="LineshapeParameter" type="ParameterOrFitType" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="ShiftingType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="ShiftingParameter" type="ParameterOrFitType" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="envRef" type="xs:IDREF"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="CrossSectionType">
        <xs:complexContent>
            <xs:extension base="DataTableType">
                <xs:attribute name="molecRef" type="xs:IDREF"/>
                <xs:attribute name="envRef" type="xs:IDREF" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- The data list type: a whitespace-delimited string of numbers -->
    <!-- It doesn't need sources and comments, because it always appears inside
        another element which provides these -->
    <xs:complexType name="DataListType">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="n" type="xs:positiveInteger"/>
                <xs:attribute name="units" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>    
    </xs:complexType>
    
    <!-- The linear sequence type: for describing arithmetic progressions of the
        form a0 a0+a1 a0+2a1 a0+3a1 ... a0+(n-1)a1 -->
    <xs:complexType name="LinearSequenceType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:attribute name="n" type="xs:positiveInteger"/>
                <xs:attribute name="units" type="xs:string"/>
                <xs:attribute name="a0" type="xs:double" use="required"/>
                <xs:attribute name="a1" type="xs:double" use="required"/>
            </xs:extension>
        </xs:complexContent>      
    </xs:complexType>
    
    <!-- A data series type -->
    <xs:complexType name="DataSeriesType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:choice>
                        <xs:element name="DataList" type="DataListType" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="LinearSequence" type="LinearSequenceType"/>
                        <xs:element name="DataFile" type="xs:string"/>
                    </xs:choice>
                    <xs:choice>
                        <xs:element name="ErrorList" type="DataListType" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="Error" type="xs:double" minOccurs="0" maxOccurs="1"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="parameter" type="xs:string"/>
                <xs:attribute name="units" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <!-- A data table: one or more X-columns (abcissa(e); independent variable(s)) and one or more
        Y-columns (dependent variable(s)) -->
    <xs:complexType name="DataTableType">
        <xs:complexContent>
            <xs:extension base="PrimaryType">
                <xs:sequence>
                    <xs:element name="Description" type="xs:string"/>
                    <xs:element name="X" type="DataSeriesType"/>
                    <xs:element name="Y" type="DataSeriesType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>